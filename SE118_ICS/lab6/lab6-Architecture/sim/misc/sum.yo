                            | # typedef struct ELE {
                            | #     long val;
                            | #     struct ELE *next;
                            | # } *list_ptr;
                            | 
                            | # /* sum_list - Sum the elements of a linked list */
                            | # long sum_list(list_ptr ls)
                            | # {
                            | #     long val = 0;
                            | #     while (ls) {
                            | # 	val += ls->val;
                            | # 	ls = ls->next;
                            | #     }
                            | #     return val;
                            | # }
                            | 
                            | 
                            | 
                            | # Execution begins at address 0
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # 内存区域，存放数据/链表之类
                            | # Sample linked list  
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |     .quad 0x0b0
0x030: 3800000000000000     |     .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |     .quad 0xc00
0x040: 0000000000000000     |     .quad 0
                            | # END
                            | 
0x048:                      | main:	
                            | 
0x048: 30f71800000000000000 | 	irmovq ele1,%rdi  #参数准备
0x052: 805c00000000000000   | 	call sum_list		# sum_list(ele1)
0x05b: 90                   | 	ret
                            | 
                            | # long sum_list(list_ptr ls)
0x05c:                      | sum_list:
0x05c: a0af                 |   pushq %r10
0x05e: 6300                 |   xorq  %rax, %rax   # Store val in %rax, set it to 0
0x060: 707f00000000000000   |   jmp   test
0x069:                      | loop:
0x069: 50a70000000000000000 |   mrmovq 0(%rdi), %r10 # store val in %r10
0x073: 60a0                 |   addq   %r10, %rax
0x075: 50770800000000000000 |   mrmovq 8(%rdi), %rdi
0x07f:                      | test:
0x07f: 6277                 |   andq  %rdi, %rdi   # Set cc according to the ls(in %rdi)
0x081: 746900000000000000   |   jne  loop
0x08a: b0af                 |   popq %r10
0x08c: 90                   |   ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |   .pos 0x200
0x200:                      | stack:
                            | 
